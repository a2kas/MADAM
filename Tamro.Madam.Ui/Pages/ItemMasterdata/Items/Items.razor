@page "/items"
@using Tamro.Madam.Models.ItemMasterdata.Items
@using Tamro.Madam.Ui.Components.DataGrid.Filtering

<Permission RequiredPermission="@Permissions.CanViewCoreMasterdata" />
<PageTitle>Items</PageTitle>

<MudPaper Class="item-container">
    <MudGrid Class="d-flex bar-above-item-grid">
        <MudItem sm="2" xs="12" Class="d-flex align-items-center">
            <MudIcon Icon="@Icons.Material.Filled.MedicationLiquid" Color="Color.Tertiary" Size="Size.Large" />
            <MudText Class="gap-4 ma-1" Typo="Typo.h6">Items</MudText>
        </MudItem>

        <MudItem sm="10" xs="12" Class="d-flex align-items-end justify-end button-bar">
            <MudButton Variant="Variant.Outlined"
                       OnClick="OnReset"
                       Size="Size.Small"
                       Disabled="@_loading"
                       StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Color="Color.Primary"
                       Style="margin-right: 4px; margin-bottom:4px">
                Reset
            </MudButton>
            <MudButton Variant="Variant.Outlined" Color="Color.Primary"
                       StartIcon="@Icons.Material.Filled.Add"
                       Size="Size.Small"
                       Disabled="@(_loading || !_userProfileState.Value.HasPermission(Permissions.CanEditCoreMasterdata))"
                       OnClick="OnCreate"
                       Style="margin-right: 4px; margin-bottom:4px"
                       IconColor="Color.Surface">
                New
            </MudButton>
            <MudButton Variant="Variant.Outlined" Color="Color.Primary"
                       StartIcon="@Icons.Material.Filled.CallSplit"
                       Size="Size.Small"
                       Disabled="@(_selectedItems.Count != 1 || !_userProfileState.Value.HasPermission(Permissions.CanEditCoreMasterdata))"
                       OnClick="OnCreateParallel"
                       Style="margin-right: 4px; margin-bottom:4px"
                       IconColor="Color.Surface">
                New Parallel
            </MudButton>
            <MudButton Variant="Variant.Outlined" Color="Color.Primary"
                       StartIcon="@Icons.Material.Filled.OpenInNew"
                       Size="Size.Small"
                       Disabled="@(_selectedItems.Count != 1)"
                       OnClick="OnOpen"
                       Style="margin-right: 4px; margin-bottom:4px"
                       IconColor="Color.Surface">
                Open
            </MudButton>
            <MudButton Variant="Variant.Outlined" Color="Color.Primary"
                       StartIcon="@Icons.Material.Filled.ContentCopy"
                       Size="Size.Small"
                       Disabled="@(_selectedItems.Count != 1 || !_userProfileState.Value.HasPermission(Permissions.CanEditCoreMasterdata))"
                       OnClick="OnCopy"
                       Style="margin-right: 4px; margin-bottom:4px"
                       IconColor="Color.Surface">
                Copy
            </MudButton>
            <MudButton Variant="Variant.Outlined" Color="Color.Primary"
                       StartIcon="@Icons.Material.Filled.ToggleOn"
                       Disabled="@(!(_selectedItems.Count > 0 && !_selectedItems.Any(x => x.Active)) || !_userProfileState.Value.HasPermission(Permissions.CanEditCoreMasterdata))"
                       Size="Size.Small"
                       Style="margin-right: 4px; margin-bottom:4px"
                       OnClick="OnActivate"
                       IconColor="Color.Surface">
                Activate
            </MudButton>
            <MudButton Variant="Variant.Outlined" Color="Color.Error"
                       StartIcon="@Icons.Material.Filled.ToggleOff"
                       Disabled="@(!(_selectedItems.Count > 0 && !_selectedItems.Any(x => !x.Active)) || !_userProfileState.Value.HasPermission(Permissions.CanEditCoreMasterdata))"
                       Size="Size.Small"
                       Style="margin-right: 4px; margin-bottom:4px"
                       OnClick="OnDeactivate"
                       IconColor="Color.Surface">
                Deactivate
            </MudButton>
            <MudButton Variant="Variant.Outlined" Color="Color.Primary"
                       StartIcon="@Icons.Material.Filled.History"
                       Disabled="@(_selectedItems.Count != 1)"
                       Size="Size.Small"
                       Style="margin-right: 4px; margin-bottom:4px"
                       OnClick="OnHistoryView"
                       IconColor="Color.Surface">
                History
            </MudButton>
            <MudLoadingButton @bind-Loading="_loading" Variant="Variant.Outlined" Color="Color.Primary"
                              Label="Export"
                              Disabled="@_loading"
                              StartIcon="@Icons.Custom.FileFormats.FileExcel"
                              Size="Size.Small"
                              Style="margin-right: 4px; margin-bottom:4px"
                              OnClick="OnExport"
                              IconColor="Color.Surface">
                Export
            </MudLoadingButton>
        </MudItem>
        <MudItem xs="12">
            <MudTextField T="string" Immediate="true" OnKeyDown="OnBasicSearchKeyDown" @bind-Value="@_query.SearchTerm" Placeholder="Search" Adornment="Adornment.End"
                          AdornmentIcon="@Icons.Material.Filled.Search" Margin="Margin.Dense" IconSize="Size.Small" Size="Size.Small" Variant="Variant.Outlined">
            </MudTextField>
        </MudItem>
    </MudGrid>
    <MudDataGrid T="ItemGridModel" ServerData="@(DataSource)"           
                 Virtualize="true"         
                 @bind-RowsPerPage="_defaultPageSize"
                 Loading="@_loading"
                 Striped="true"
                 Bordered="true"
                 Class="no-wrap-grid"
                 Dense="true"
                 ColumnResizeMode="ResizeMode.Container"
                 DragDropColumnReordering="true"
                 ApplyDropClassesOnDragStarted="true"
                 FilterMode="@DataGridFilterMode.ColumnFilterRow"
                 SortLabel="Order by"
                 FilterDefinitions="@_defaultFilterDefinition"
                 Filterable="true"
                 MultiSelection="true"
                 @bind-SelectedItems="_selectedItems"
                 Hideable="true"
                 Hover="true"
                 @ref="_table">
        <Columns>
                <SelectColumn Size="Size.Small" T="ItemGridModel" ShowInFooter="false"></SelectColumn>
                <TemplateColumn CellStyle="width: 60px" Title="Actions" Filterable="false" Sortable="false" DragDropColumnReordering="false">
                <CellTemplate>
                    <MudGrid Class="action-bar">
                        <MudItem>
                            <MudTooltip Text="Open" Placement="Placement.Top">
                                <MudIconButton DisableElevation
                                               Icon="@Icons.Material.Filled.OpenInNew"
                                               Size="Size.Small"
                                               OnClick="@(() => OnOpen(context.Item))"
                                               Color="Color.Primary">
                                </MudIconButton>
                            </MudTooltip>
                        </MudItem>
                        <MudItem>
                            <MudTooltip Text="Copy" Placement="Placement.Top">
                                <MudIconButton DisableElevation
                                               Icon="@Icons.Material.Filled.ContentCopy"
                                               Size="Size.Small"
                                               OnClick="@(() => OnCopy(context.Item))"
                                               Disabled="!_userProfileState.Value.HasPermission(Permissions.CanEditCoreMasterdata)">
                                </MudIconButton>
                            </MudTooltip>
                        </MudItem>
                        <MudItem>
                            <MudTooltip Text="More" Placement="Placement.Top">
                                <MudMenu Class="more-horiz-icon" icon="@Icons.Material.Outlined.MoreHoriz" Variant="Variant.Text" DisableElevation="true" Size="Size.Small" Dense="true" AnchorOrigin="Origin.CenterLeft">
                                    <MudMenuItem OnClick="@(() => OnCreateParallel(context.Item))" Disabled="@(!_userProfileState.Value.HasPermission(Permissions.CanEditCoreMasterdata))">New parallel</MudMenuItem>
                                    <MudMenuItem OnClick="@(() => OnActivate(context.Item))" Disabled="@(context.Item.Active || !_userProfileState.Value.HasPermission(Permissions.CanEditCoreMasterdata))">Activate</MudMenuItem>
                                    <MudMenuItem OnClick="@(() => OnDeactivate(context.Item))" Disabled="@(!context.Item.Active || !_userProfileState.Value.HasPermission(Permissions.CanEditCoreMasterdata))">Deactivate</MudMenuItem>
                                    <MudMenuItem OnClick="@(() => OnHistoryView(context.Item))">History</MudMenuItem>
                                </MudMenu>
                            </MudTooltip>
                        </MudItem>
                    </MudGrid>
                </CellTemplate>
            </TemplateColumn>
            <PropertyColumn Property="x => x.Id" Title="@DisplayNameHelper.Get(typeof(ItemGridModel), nameof(ItemGridModel.Id))"></PropertyColumn>
            <PropertyColumn CellStyle="width: 230px; max-width: 230px" Property="x => x.ItemName" Title="@DisplayNameHelper.Get(typeof(ItemGridModel), nameof(ItemGridModel.ItemName))">
            <CellTemplate>
                    <MudTooltip Text="@context.Item.ItemName" Placement="Placement.Bottom">
                        @context.Item.ItemName
                    </MudTooltip>
            </CellTemplate>
            </PropertyColumn>
            <PropertyColumn Property="x => x.Description" Title="@DisplayNameHelper.Get(typeof(ItemGridModel), nameof(ItemGridModel.Description))">
                <CellTemplate>
                    <MudTooltip Text="@context.Item.Description" Placement="Placement.Bottom">
                        @context.Item.Description
                    </MudTooltip>
                </CellTemplate>
            </PropertyColumn>
            <PropertyColumn Property="x => x.Producer" ShowFilterIcon="false" Title="@DisplayNameHelper.Get(typeof(ItemGridModel), nameof(ItemGridModel.Producer))"></PropertyColumn>
            <PropertyColumn Property="x => x.Brand" Title="@DisplayNameHelper.Get(typeof(ItemGridModel), nameof(ItemGridModel.Brand))">
                <CellTemplate>
                    <MudTooltip Text="@context.Item.Brand" Placement="Placement.Bottom">
                        @context.Item.Brand
                    </MudTooltip>
                </CellTemplate>
            </PropertyColumn>
            <PropertyColumn Property="x => x.Strength" Title="@DisplayNameHelper.Get(typeof(ItemGridModel), nameof(ItemGridModel.Strength))"></PropertyColumn>
            <PropertyColumn Property="x => x.Form" Title="@DisplayNameHelper.Get(typeof(ItemGridModel), nameof(ItemGridModel.Form))"></PropertyColumn>
            <PropertyColumn Property="x => x.Measure" Title="@DisplayNameHelper.Get(typeof(ItemGridModel), nameof(ItemGridModel.Measure))"></PropertyColumn>
            <PropertyColumn Property="x => x.MeasurementUnit" Title="@DisplayNameHelper.Get(typeof(ItemGridModel), nameof(ItemGridModel.MeasurementUnit))"></PropertyColumn>
            <PropertyColumn Property="x => x.AtcCode" Title="@DisplayNameHelper.Get(typeof(ItemGridModel), nameof(ItemGridModel.AtcCode))"></PropertyColumn>
            <PropertyColumn Property="x => x.AtcName" Title="@DisplayNameHelper.Get(typeof(ItemGridModel), nameof(ItemGridModel.AtcName))"></PropertyColumn>
            <PropertyColumn Property="x => x.SupplierNick" Title="@DisplayNameHelper.Get(typeof(ItemGridModel), nameof(ItemGridModel.SupplierNick))"></PropertyColumn>
            <PropertyColumn Property="x => x.Numero" Title="@DisplayNameHelper.Get(typeof(ItemGridModel), nameof(ItemGridModel.Numero))"></PropertyColumn>
            <PropertyColumn Property="x => x.ActiveSubstance" Title="@DisplayNameHelper.Get(typeof(ItemGridModel), nameof(ItemGridModel.ActiveSubstance))"></PropertyColumn>
            <PropertyColumn Property="x => x.Active" Title="@DisplayNameHelper.Get(typeof(ItemGridModel), nameof(ItemGridModel.Active))">
                <CellTemplate>
                    @if (context.Item.Active)
                    {
                        <MudIcon Icon="@Icons.Material.Filled.Check" Color="Color.Primary" Size="Size.Medium" />
                    }
                </CellTemplate>
                <FilterTemplate>
                    <BooleanFilterTemplate FilterOptions="@_isActiveFilterOptions" ApplyClick="@ApplyIsActiveFilter" CancelClick="@ClearIsActiveFilter" />
                </FilterTemplate>
            </PropertyColumn>
        </Columns>
        <NoRecordsContent>
            <MudText>No data to display</MudText>
        </NoRecordsContent>
        <LoadingContent>
            <MudText>Loading</MudText>
        </LoadingContent>
        <PagerContent>
            <MudDataGridPager PageSizeOptions="@(new[] { 10, 15, 30, 50, 100, 200 })" />
        </PagerContent>
    </MudDataGrid>
</MudPaper>