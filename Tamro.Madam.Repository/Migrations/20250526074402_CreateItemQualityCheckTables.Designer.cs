// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tamro.Madam.Repository.Context.Madam;

#nullable disable

namespace Tamro.Madam.Repository.Migrations
{
    [DbContext(typeof(MadamDbContext))]
    [Migration("20250526074402_CreateItemQualityCheckTables")]
    partial class CreateItemQualityCheckTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.Atcs.Atc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ATC");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.Brands.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.Commerce.Assortment.ItemAssortmentSalesChannel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("RowVer")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("Country", "Name")
                        .IsUnique();

                    b.ToTable("ItemAssortmentSalesChannel", (string)null);
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.Customers.CustomerLegalEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("E1SoldTo")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("RowVer")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.ToTable("CustomerLegalEntity", (string)null);
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.Customers.CustomerLegalEntityNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("CustomerLegalEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RowVer")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("SendCanceledOrderNotification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("CustomerLegalEntityId")
                        .IsUnique();

                    b.ToTable("CustomerLegalEntityNotification", (string)null);
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Barcodes.Barcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ean")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EAN");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Measure")
                        .HasColumnType("int")
                        .HasColumnName("Measure");

                    b.Property<DateTime?>("RowVer")
                        .HasColumnType("datetime")
                        .HasColumnName("EditedAt");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("Barcode", null, t =>
                        {
                            t.HasTrigger("TR_Barcode_EditedAt");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Forms.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Form");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Bindings.Assortment.ItemAssortmentBindingMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("ItemAssortmentSalesChannelId")
                        .HasColumnType("int");

                    b.Property<int>("ItemBindingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RowVer")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("ItemAssortmentSalesChannelId");

                    b.HasIndex("ItemBindingId", "ItemAssortmentSalesChannelId")
                        .IsUnique();

                    b.ToTable("ItemAssortmentBindingMap", (string)null);
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Bindings.ItemBinding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("LocalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVer")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemBinding", null, t =>
                        {
                            t.HasTrigger("TR_ItemBinding_Delete");

                            t.HasTrigger("TR_ItemBinding_InsertUpdate");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Bindings.ItemBindingLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemBindingId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemBindingId");

                    b.ToTable("ItemLanguages");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Bindings.Retail.GeneratedRetailCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("Code")
                        .HasColumnType("bigint");

                    b.Property<string>("CodePrefix")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("GeneratedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Country", "CodePrefix", "Code")
                        .IsUnique();

                    b.ToTable("GeneratedRetailCodes");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Bindings.Vlk.VlkBinding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemBindingId")
                        .HasColumnType("int");

                    b.Property<int>("NpakId7")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemBindingId");

                    b.HasIndex("NpakId7")
                        .IsUnique();

                    b.ToTable("VlkBinding");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Active")
                        .HasColumnType("int")
                        .HasColumnName("Active");

                    b.Property<string>("ActiveSubstance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AtcId")
                        .HasColumnType("int");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ItemName");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Regular");

                    b.Property<decimal?>("Measure")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MeasurementUnitId")
                        .HasColumnType("int")
                        .HasColumnName("UOMId");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int?>("ParallelParentItemId")
                        .HasColumnType("int");

                    b.Property<int>("ProducerId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestorId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVer")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Strength")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupplierNickId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AtcId");

                    b.HasIndex("BrandId");

                    b.HasIndex("FormId");

                    b.HasIndex("MeasurementUnitId");

                    b.HasIndex("ProducerId");

                    b.HasIndex("RequestorId");

                    b.HasIndex("SupplierNickId");

                    b.ToTable("Item", null, t =>
                        {
                            t.HasTrigger("TR_Item_Delete");

                            t.HasTrigger("TR_Item_InsertUpdate");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.ItemLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<string>("ActiveSubstance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AtcId")
                        .HasColumnType("int")
                        .HasColumnName("AtcId");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Dose")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EditedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EditedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Measure")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int?>("ParallelParentItemId")
                        .HasColumnType("int");

                    b.Property<int>("ProducerId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestorId")
                        .HasColumnType("int");

                    b.Property<string>("Strength")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupplierNickId")
                        .HasColumnType("int");

                    b.Property<int?>("UomId")
                        .HasColumnType("int")
                        .HasColumnName("UOMId");

                    b.HasKey("Id");

                    b.ToTable("ItemLog");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.QualityCheck.ItemQualityCheck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RowVer")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.ToTable("ItemQualityCheck", (string)null);
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.QualityCheck.ItemQualityCheckIssue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("IssueEntity")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IssueField")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IssueSeverity")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Low");

                    b.Property<string>("IssueStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("New");

                    b.Property<int?>("ItemBindingId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemQualityCheckId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RowVer")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("ItemBindingId")
                        .IsUnique()
                        .HasFilter("[ItemBindingId] IS NOT NULL");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.HasIndex("ItemQualityCheckId");

                    b.ToTable("ItemQualityCheckIssue", (string)null);
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.SafetyStocks.SafetyStock", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("SafetyStockItemId");

                    b.Property<decimal?>("RetailQuantity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WholesaleQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SafetyStock");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.SafetyStocks.SafetyStockCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanBuy")
                        .HasColumnType("bit");

                    b.Property<string>("Comment")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("RestrictionLevel")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("RowVer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("SafetyStockItemId")
                        .HasColumnType("int");

                    b.Property<string>("SafetyStockPharmacyChainGroup")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("SafetyStockPharmacyChainId")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("SafetyStockPharmacyChainId");

                    b.HasIndex("SafetyStockItemId", "SafetyStockPharmacyChainGroup")
                        .IsUnique()
                        .HasFilter("(SafetyStockPharmacyChainId IS NULL)");

                    b.HasIndex("SafetyStockItemId", "SafetyStockPharmacyChainId", "SafetyStockPharmacyChainGroup")
                        .IsUnique()
                        .HasFilter("(SafetyStockPharmacyChainId IS NOT NULL)");

                    b.ToTable("SafetyStockCondition");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.SafetyStocks.SafetyStockGridData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CanBuy")
                        .HasColumnType("bit");

                    b.Property<int>("CheckDays")
                        .HasColumnType("int");

                    b.Property<string>("Cn1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cn3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("ItemGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PharmacyChainDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PharmacyChainId")
                        .HasColumnType("int");

                    b.Property<string>("ProductClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuantityToBuy")
                        .HasColumnType("int");

                    b.Property<decimal?>("RetailQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SafetyStockPharmacyChainGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Substance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierNick")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupplierNumber")
                        .HasColumnType("int");

                    b.Property<int?>("WholesaleQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("v_SafetyStockGrid");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.SafetyStocks.SafetyStockItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("CheckDays")
                        .HasColumnType("int");

                    b.Property<string>("Cn1")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Cn3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("ItemGroup")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("ItemName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemNo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ProductClass")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Substance")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SupplierNick")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("SupplierNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemNo", "Country")
                        .IsUnique();

                    b.ToTable("SafetyStockItem");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.SafetyStocks.SafetyStockPharmacyChain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("E1SoldTo")
                        .HasColumnType("int");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Country", "E1SoldTo")
                        .IsUnique();

                    b.ToTable("SafetyStockPharmacyChain");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.MeasurementUnits.MeasurementUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UOM");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Nicks.Nick", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SupplierNick");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Producers.Producer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Producer");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Requestors.Requestor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Requestor");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.Suppliers.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("RowVer")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Supplier", (string)null);
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.Suppliers.SupplierContract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("AgreementDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AgreementValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AgreementValidTo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentReference")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PaymentTermInDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("RowVer")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("SupplierContract", (string)null);
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.Users.UserSettings.UserSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<int?>("RowsPerPage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("TamroUtilities.EFCore.Models.DbAuditEntry", b =>
                {
                    b.Property<int>("AuditEntryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditEntryID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntitySetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuditEntryID");

                    b.ToTable("AuditEntry");
                });

            modelBuilder.Entity("TamroUtilities.EFCore.Models.DbAuditEntryProperty", b =>
                {
                    b.Property<int>("AuditEntryPropertyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditEntryPropertyID"));

                    b.Property<int>("AuditEntryID")
                        .HasColumnType("int");

                    b.Property<string>("NewValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuditEntryPropertyID");

                    b.HasIndex("AuditEntryID");

                    b.ToTable("AuditEntryProperty");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.Customers.CustomerLegalEntityNotification", b =>
                {
                    b.HasOne("Tamro.Madam.Repository.Entities.Customers.CustomerLegalEntity", null)
                        .WithOne("NotificationSettings")
                        .HasForeignKey("Tamro.Madam.Repository.Entities.Customers.CustomerLegalEntityNotification", "CustomerLegalEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Barcodes.Barcode", b =>
                {
                    b.HasOne("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Item", "Item")
                        .WithMany("Barcodes")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Barcode_Item");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Bindings.Assortment.ItemAssortmentBindingMap", b =>
                {
                    b.HasOne("Tamro.Madam.Repository.Entities.Commerce.Assortment.ItemAssortmentSalesChannel", "ItemAssortmentSalesChannel")
                        .WithMany("ItemAssortmentBindingMaps")
                        .HasForeignKey("ItemAssortmentSalesChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Bindings.ItemBinding", "ItemBinding")
                        .WithMany("ItemAssortmentBindingMaps")
                        .HasForeignKey("ItemBindingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemAssortmentSalesChannel");

                    b.Navigation("ItemBinding");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Bindings.ItemBinding", b =>
                {
                    b.HasOne("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Item", "Item")
                        .WithMany("Bindings")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Bindings.ItemBindingLanguage", b =>
                {
                    b.HasOne("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Bindings.ItemBinding", "ItemBinding")
                        .WithMany("Languages")
                        .HasForeignKey("ItemBindingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemBinding");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Bindings.Vlk.VlkBinding", b =>
                {
                    b.HasOne("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Bindings.ItemBinding", "ItemBinding")
                        .WithMany()
                        .HasForeignKey("ItemBindingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ItemBinding");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Item", b =>
                {
                    b.HasOne("Tamro.Madam.Repository.Entities.Atcs.Atc", "Atc")
                        .WithMany("Items")
                        .HasForeignKey("AtcId")
                        .HasConstraintName("FK_Item_BATC");

                    b.HasOne("Tamro.Madam.Repository.Entities.Brands.Brand", "Brand")
                        .WithMany("Items")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Item_Brand");

                    b.HasOne("Tamro.Madam.Repository.Entities.ItemMasterdata.Forms.Form", "Form")
                        .WithMany("Items")
                        .HasForeignKey("FormId")
                        .HasConstraintName("FK_Item_Form");

                    b.HasOne("Tamro.Madam.Repository.Entities.ItemMasterdata.MeasurementUnits.MeasurementUnit", "MeasurementUnit")
                        .WithMany("Items")
                        .HasForeignKey("MeasurementUnitId");

                    b.HasOne("Tamro.Madam.Repository.Entities.ItemMasterdata.Producers.Producer", "Producer")
                        .WithMany("Items")
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Item_Producer");

                    b.HasOne("Tamro.Madam.Repository.Entities.ItemMasterdata.Requestors.Requestor", "Requestor")
                        .WithMany("Items")
                        .HasForeignKey("RequestorId")
                        .HasConstraintName("Item_RequestorIdr_FK");

                    b.HasOne("Tamro.Madam.Repository.Entities.ItemMasterdata.Nicks.Nick", "SupplierNick")
                        .WithMany("Items")
                        .HasForeignKey("SupplierNickId");

                    b.Navigation("Atc");

                    b.Navigation("Brand");

                    b.Navigation("Form");

                    b.Navigation("MeasurementUnit");

                    b.Navigation("Producer");

                    b.Navigation("Requestor");

                    b.Navigation("SupplierNick");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.QualityCheck.ItemQualityCheck", b =>
                {
                    b.HasOne("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Item", "Item")
                        .WithOne()
                        .HasForeignKey("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.QualityCheck.ItemQualityCheck", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.QualityCheck.ItemQualityCheckIssue", b =>
                {
                    b.HasOne("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Bindings.ItemBinding", "ItemBinding")
                        .WithOne()
                        .HasForeignKey("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.QualityCheck.ItemQualityCheckIssue", "ItemBindingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Item", "Item")
                        .WithOne()
                        .HasForeignKey("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.QualityCheck.ItemQualityCheckIssue", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.QualityCheck.ItemQualityCheck", "ItemQualityCheck")
                        .WithMany("ItemQualityCheckIssues")
                        .HasForeignKey("ItemQualityCheckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ItemBinding");

                    b.Navigation("ItemQualityCheck");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.SafetyStocks.SafetyStock", b =>
                {
                    b.HasOne("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.SafetyStocks.SafetyStockItem", null)
                        .WithOne("SafetyStock")
                        .HasForeignKey("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.SafetyStocks.SafetyStock", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.SafetyStocks.SafetyStockCondition", b =>
                {
                    b.HasOne("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.SafetyStocks.SafetyStockItem", "SafetyStockItem")
                        .WithMany("SafetyStockConditions")
                        .HasForeignKey("SafetyStockItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.SafetyStocks.SafetyStockPharmacyChain", "SafetyStockPharmacyChain")
                        .WithMany()
                        .HasForeignKey("SafetyStockPharmacyChainId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SafetyStockItem");

                    b.Navigation("SafetyStockPharmacyChain");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.Suppliers.SupplierContract", b =>
                {
                    b.HasOne("Tamro.Madam.Repository.Entities.Suppliers.Supplier", null)
                        .WithMany("Contracts")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TamroUtilities.EFCore.Models.DbAuditEntryProperty", b =>
                {
                    b.HasOne("TamroUtilities.EFCore.Models.DbAuditEntry", "AuditEntry")
                        .WithMany("Properties")
                        .HasForeignKey("AuditEntryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuditEntry");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.Atcs.Atc", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.Brands.Brand", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.Commerce.Assortment.ItemAssortmentSalesChannel", b =>
                {
                    b.Navigation("ItemAssortmentBindingMaps");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.Customers.CustomerLegalEntity", b =>
                {
                    b.Navigation("NotificationSettings")
                        .IsRequired();
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Forms.Form", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Bindings.ItemBinding", b =>
                {
                    b.Navigation("ItemAssortmentBindingMaps");

                    b.Navigation("Languages");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.Item", b =>
                {
                    b.Navigation("Barcodes");

                    b.Navigation("Bindings");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.QualityCheck.ItemQualityCheck", b =>
                {
                    b.Navigation("ItemQualityCheckIssues");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Items.SafetyStocks.SafetyStockItem", b =>
                {
                    b.Navigation("SafetyStock")
                        .IsRequired();

                    b.Navigation("SafetyStockConditions");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.MeasurementUnits.MeasurementUnit", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Nicks.Nick", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Producers.Producer", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.ItemMasterdata.Requestors.Requestor", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Tamro.Madam.Repository.Entities.Suppliers.Supplier", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("TamroUtilities.EFCore.Models.DbAuditEntry", b =>
                {
                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
